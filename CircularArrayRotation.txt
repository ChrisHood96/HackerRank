#DEFINITON:
#John Watson knows of an operation called a right circular rotation on an array of integers. 
#One rotation operation moves the last array element to the first position and shifts all remaining elements right one. 
#To test Sherlock's abilities, Watson provides Sherlock with an array of integers. 
#Sherlock is to perform the rotation operation a number of times then determine the value of the element at a given position.
#For each array, perform a number of right circular rotations and return the value of the element at a given index.

#!/bin/python3

import math
import os
import random
import re
import sys

#a =  an array of integers to rotate
#k = an integer, the rotation count
#queries = an array of integers, the indices to report


def circularArrayRotation(a, k, queries):
    new = []
    if k > len(a):
        lk = k%len(a)        
        a = a[-lk:] + a[:-lk]
    else:    
        a = a[-k:] + a[:-k]
    for i in queries:
        new.append(a[i])
    return new

#code below provided by hackerrank

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    nkq = input().split()

    n = int(nkq[0])

    k = int(nkq[1])

    q = int(nkq[2])

    a = list(map(int, input().rstrip().split()))

    queries = []

    for _ in range(q):
        queries_item = int(input())
        queries.append(queries_item)

    result = circularArrayRotation(a, k, queries)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()